@startuml
boundary X
participant ":RouteElevator" as ROUTE
participant "ElevatorController\n<<Controller>>" as CTRL
participant "ElevatorMapper\n<<Json2DTO>>" as MAPPER
participant "ElevatorDTO\n<<DTO>>" as DTO
participant "ElevatorService\n<<Service>>" as SRV
participant "Elevator\n<<Entity>>" as ENTITY
participant "ElevatorRepo\n:IElevatorRepo<<Repository>>" as REPO
participant "ElevatorMap\n<<Domain2Data>>" as MAPPER2
participant "DataElevator<<\n<<Data>>" as DATA
database "dbDriver\n<<Database>>" as DB

X -> ROUTE : PUT/PATCH /elevator(json)
activate ROUTE
ROUTE -> CTRL : updateElevator(json)
    activate CTRL
    CTRL -> CTRL : validateJson()
        activate CTRL
        deactivate CTRL
    CTRL -> MAPPER : toDTO(json)
        activate MAPPER
        MAPPER -> DTO** : create(json)
        deactivate MAPPER
    CTRL -> SRV : elevatorDTO = updateElevator(elevatorDTO)
        activate SRV
        SRV -> ENTITY** : elevator = create(elevatorDTO)
        SRV -> REPO : updateElevator(elevator)
            activate REPO
            REPO -> MAPPER2 : dataElevator = toData(elevator)
                activate MAPPER2
                MAPPER2 -> ENTITY : getFloors()
                    activate ENTITY
                    deactivate ENTITY
                MAPPER2 -> DATA** : dataElevator = create(elevatorFloors)
                deactivate MAPPER2
            REPO -> DB : save(dataElevator)
                activate DB
                deactivate DB
            deactivate REPO
        SRV -> MAPPER : toDTO(elevator)
            activate MAPPER
            MAPPER -> ENTITY : elevatorCode = getElevatorFloors()
                activate ENTITY
                deactivate ENTITY
            deactivate MAPPER
        deactivate SRV
    CTRL -> CTRL : generateRes(json)
        activate CTRL
        deactivate CTRL
    CTRL --> ROUTE : response
    deactivate CTRL
    ROUTE -> X : response
deactivate ROUTE

@enduml
